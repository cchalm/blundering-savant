name: Bot Runner
on:
  issues:
    types: [assigned, labeled]
  issue_comment:
    types: [created]
  pull_request:
    types: [synchronize]
  pull_request_review:
    types: [submitted]

jobs:
  run:
    permissions:
      actions: write        # To create workflow dispatch events
      contents: write       # To make code changes
      issues: write         # To edit labels and comment on issues
      pull-requests: write  # To create, edit labels on, and comment on pull requests

    runs-on: ubuntu-latest

    # Prevent multiple simultaneous runs per repository target (issue or PR)
    # Different event types store the target number in different locations:
    # - issues/issue_comment: github.event.issue.number
    # - pull_request/pull_request_review: github.event.pull_request.number
    concurrency:
      group: bot-${{ github.repository }}-${{ github.event.issue.number || github.event.pull_request.number || 'unknown' }}
      cancel-in-progress: true

    # Run if the triggering user is the authorized user configured for the repository AND:
    # - The affected issue is assigned to the bot, OR
    # - The affected issue is owned by the bot (for top-level PR comments), OR
    # - The affected pull request is owned by the bot
    if: >
      github.actor == vars.AUTHORIZED_USERNAME &&
      (
        (github.event.issue && github.event.issue.assignee.login == vars.BOT_USERNAME) ||
        (github.event.issue && github.event.issue.user.login == vars.BOT_USERNAME) ||
        (github.event.pull_request && github.event.pull_request.user.login == vars.BOT_USERNAME)
      )

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Install bot
      run: go install github.com/cchalm/blundering-savant/app/blundering-savant@v0.2.0

    - name: Run bot
      timeout-minutes: 30
      env:
        SYSTEM_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BOT_GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        VALIDATION_WORKFLOW_NAME: ${{ vars.VALIDATION_WORKFLOW_NAME }}
      run: |
        echo "Processing ${{ github.event_name }}.${{ github.event.action }} by ${{ github.actor }}"

        # Set validation workflow name with default
        VALIDATION_WORKFLOW="${{ vars.VALIDATION_WORKFLOW_NAME || 'blundering-savant-validate.yml' }}"

        # Determine whether to use issue number or PR number
        ISSUE_NUMBER=""
        PR_NUMBER=""

        # For issue_comment events on PRs, check if it's a pull request comment
        if [ -n "${{ github.event.issue.number }}" ] && [ "${{ github.event.issue.pull_request }}" != "" ]; then
          # This is a comment on a PR (treated as an issue comment by GitHub)
          PR_NUMBER="${{ github.event.issue.number }}"
        elif [ -n "${{ github.event.issue.number }}" ]; then
          # This is a regular issue
          ISSUE_NUMBER="${{ github.event.issue.number }}"
        elif [ -n "${{ github.event.pull_request.number }}" ]; then
          # This is a PR event (synchronize, review, etc.)
          PR_NUMBER="${{ github.event.pull_request.number }}"
        else
          echo "Error: Neither issue number nor PR number available"
          exit 1
        fi

        # Build command with appropriate flags
        CMD="blundering-savant oneshot --repo ${{ github.repository }} --validation-workflow \"$VALIDATION_WORKFLOW\""
        if [ -n "$ISSUE_NUMBER" ]; then
          echo "Repository: ${{ github.repository }} / Issue #$ISSUE_NUMBER"
          CMD="$CMD --issue-number $ISSUE_NUMBER"
        fi
        if [ -n "$PR_NUMBER" ]; then
          echo "Repository: ${{ github.repository }} / PR #$PR_NUMBER"
          CMD="$CMD --pr-number $PR_NUMBER"
        fi

        # Execute the command
        eval "$CMD"

        if [ $? -ne 0 ]; then
          echo "Bot failed with exit code $?"
          exit 1
        fi

        echo "Bot completed successfully"

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: bot-logs-${{ github.run_id }}
        path: logs/
        retention-days: 7